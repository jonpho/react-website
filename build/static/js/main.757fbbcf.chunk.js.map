{"version":3,"sources":["images/headshot.jpg","components/About.js","components/Navigation.js","components/Footer.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["About","className","alt","src","headShot","React","Component","Navigation","href","type","id","role","Footer","Date","getFullYear","this","currentYear","Jumbotron","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iQAAe,MAA0B,qC,OCGnCA,E,4JACJ,WACE,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,qBACA,mBAAGA,UAAU,YAAb,8dAMA,mBAAGA,UAAU,YAAb,6PAIA,mBAAGA,UAAU,YAAb,6KAIF,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAgBC,IAAI,UAAUC,IAAKC,e,GAtB1CC,IAAMC,WA8BXN,IC/BTO,E,4JACJ,WACE,OACE,sBAAKN,UAAU,8CAAf,UACE,mBAAGA,UAAU,eAAeO,KAAK,cAAjC,0BACA,wBAAQP,UAAU,iBAAiBQ,KAAK,SAAS,cAAY,WAAW,cAAY,0BAC5E,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBADhF,SAEE,sBAAMR,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BS,GAAG,yBAA7C,SACE,qBAAIT,UAAU,qBAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,oBAAGA,UAAU,WAAWO,KAAK,cAA7B,kBAAgD,sBAAMP,UAAU,UAAhB,4BAElD,qBAAIA,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2B,cAAY,WAAWO,KAAK,cAAcE,GAAG,iBAAiBC,KAAK,SAAS,gBAAc,OAAO,gBAAc,QAAvJ,0BACA,sBAAKV,UAAU,gBAAgB,kBAAgB,iBAA/C,UACE,mBAAGA,UAAU,gBAAgBO,KAAK,4BAAlC,oBACA,mBAAGP,UAAU,gBAAgBO,KAAK,qCAAlC,sBACA,mBAAGP,UAAU,gBAAgBO,KAAK,kCAAlC,sBACA,mBAAGP,UAAU,gBAAgBO,KAAK,kCAAlC,qBACA,mBAAGP,UAAU,gBAAgBO,KAAK,yCAAlC,yC,GArBSH,IAAMC,WA+BhBC,IC/BTK,E,iKAEJ,WAEE,OADa,IAAIC,MACLC,gB,oBAGd,WACE,OACE,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACE,2CAAcc,KAAKC,6B,GAbZX,IAAMC,WAsBZM,ICtBTK,E,4JACJ,WACE,OACE,qBAAKhB,UAAU,YAAf,SACE,qBAAKA,UAAU,oB,GAJCI,IAAMC,WAWfW,ICaAC,MAnBf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,8BACE,cAAC,EAAD,MAEF,8BACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,UCRYkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.757fbbcf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/headshot.1b370799.jpg\";","import React from 'react';\nimport headShot from '../images/headshot.jpg';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <h2 className=\"text-center\">Welcome</h2>\n            <p className=\"text-left\">Hello! My name is Jonathan Pho. I'm a Software Engineer in Test with over 10 years\n              of experience in managing and planning QA teams. I have an extensive background in automated testing and\n              manual testing. Along with my background in testing, I have a proven track record of building, managing,\n              mentoring, and guiding QA teams. If you would like to know more about my professional experience please\n              feel free to checkout my Social Network links above and contact me.\n            </p>\n            <p className=\"text-left\">The main point of this site is to update my skills and knowledge of coding. In\n              recent years coding has been a big part of my career and my goals. It's a great skill to have and I hope\n              to branch into more software engineering in the future.\n            </p>\n            <p className=\"text-left\">The tech stack of this site is currently created from React with Bootstrap. My goal\n              is to add more backend work to this site but that is a work in progress.\n            </p>\n          </div>\n          <div className=\"col-4\">\n            <img className=\"img-thumbnail\" alt=\"profile\" src={headShot} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React from 'react';\n\nclass Navigation extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"/index.html\">Jonathan Pho</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/index.html\">Home <span className=\"sr-only\">(current)</span></a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"/index.html\" id=\"navbarDropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Social Media</a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a className=\"dropdown-item\" href=\"https://github.com/jonpho\">GitHub</a>\n                <a className=\"dropdown-item\" href=\"https://www.linkedin.com/in/jonpho\">LinkedIN</a>\n                <a className=\"dropdown-item\" href=\"https://www.facebook.com/jonpho\">Facebook</a>\n                <a className=\"dropdown-item\" href=\"https://twitter.com/jonathanpho\">Twitter</a>\n                <a className=\"dropdown-item\" href=\"https://www.instagram.com/leftphodead/\">Instagram</a>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Footer extends React.Component {\n\n  currentYear() {\n    const date = new Date();\n    return date.getFullYear();\n  }\n\n  render() {\n    return (\n      <div className=\"section-footer text-left\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <p>Copyright {this.currentYear()}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\n\nclass Jumbotron extends React.Component {\n  render() {\n    return (\n      <div className=\"jumbotron\">\n        <div className=\"container\">\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbotron;","import React from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navigation from './components/Navigation';\nimport Footer from \"./components/Footer\";\nimport Jumbotron from \"./components/Jumbotron\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Navigation />\n      </div>\n      <div>\n        <Jumbotron />\n      </div>\n      <div className=\"section\">\n        <About />\n      </div>\n      <div className=\"section\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}